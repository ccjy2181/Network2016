package acidrain;

import java.awt.Container;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Administrator
 */
public class Lobby extends javax.swing.JFrame implements  WindowListener {
    ImageIcon bg_icon;
    ImageIcon user_ui;
    String ID;
    int RoomListSize = 0;
    /**
     * Creates new form Lobby_2
     */
    public Lobby(String UserID) {
        
        bg_icon = new ImageIcon("D:\\Eclipse\\bg\\lobby_bg.jpg");
        user_ui = new ImageIcon("D:\\Eclipse\\bg\\user_ui.png");
        ID = getID(UserID);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Background = new javax.swing.JPanel(){
            public void paintComponent(Graphics g) {
                // Approach 1: Dispaly image at at full size
                g.drawImage(bg_icon.getImage(), 0, 0, null);
                // Approach 2: Scale image to size of component
                // Dimension d = getSize();
                // g.drawImage(icon.getImage(), 0, 0, d.width, d.height, null);
                // Approach 3: Fix the image position in the scroll pane
                // Point p = scrollPane.getViewport().getViewPosition();
                // g.drawImage(icon.getImage(), p.x, p.y, null);
                setOpaque(false); //그림을 표시하게 설정,투명하게 조절
                super.paintComponent(g);
            }
        };
        Room = new javax.swing.JScrollPane();
        RoomList = new javax.swing.JList<>();
        MakeRoom = new javax.swing.JButton(new ImageIcon("D:\\Eclipse\\bg\\makeroom1.jpg"));
        Chat = new javax.swing.JScrollPane();
        ChatText = new javax.swing.JTextArea();
        ChatWriter = new javax.swing.JFormattedTextField();
        JoinRoom = new javax.swing.JButton(new ImageIcon("D:\\Eclipse\\bg\\joinroom1.jpg"));
        UserData = new javax.swing.JPanel(){
            public void paintComponent(Graphics g) {
                // Approach 1: Dispaly image at at full size
                g.drawImage(user_ui.getImage(), 0, 0, null);
                // Approach 2: Scale image to size of component
                // Dimension d = getSize();
                // g.drawImage(icon.getImage(), 0, 0, d.width, d.height, null);
                // Approach 3: Fix the image position in the scroll pane
                // Point p = scrollPane.getViewport().getViewPosition();
                // g.drawImage(icon.getImage(), p.x, p.y, null);
                setOpaque(false); //그림을 표시하게 설정,투명하게 조절
                super.paintComponent(g);
            }
        };
        UserImage = new javax.swing.JPanel();
        UserList = new javax.swing.JScrollPane();
        Data = new javax.swing.JList<>();
        Logout = new javax.swing.JButton(new ImageIcon("D:\\Eclipse\\bg\\logout1.png"));
        Exit = new javax.swing.JButton(new ImageIcon("D:\\Eclipse\\bg\\exit1.png"));
        EntireCheck = new javax.swing.JButton(new ImageIcon("D:\\Eclipse\\bg\\entirecheck1.png"));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(1050, 850));
        setMinimumSize(new java.awt.Dimension(1050, 850));
        setPreferredSize(new java.awt.Dimension(1050, 800));
        setResizable(false);

        Background.setFocusable(false);
        Background.setMaximumSize(new java.awt.Dimension(1050, 800));
        Background.setMinimumSize(new java.awt.Dimension(1050, 800));
        Background.setPreferredSize(new java.awt.Dimension(1050, 800));
        Background.setRequestFocusEnabled(false);

        RoomList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] RoomLists = { "test1", "test2" };
            public int getSize() { return RoomLists.length; }
            public String getElementAt(int i) { return RoomLists[i]; }
        });
        Room.setViewportView(RoomList);

        MakeRoom.setAlignmentY(0.0F);
        MakeRoom.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        MakeRoom.setPressedIcon(new ImageIcon("D:\\Eclipse\\bg\\makeroom2.jpg"));
        MakeRoom.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MakeRoomMouseClicked(evt);
            }
        });

        ChatText.setColumns(20);
        ChatText.setRows(5);
        Chat.setViewportView(ChatText);

        ChatWriter.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                ChatWriterKeyPressed(evt);
            }
        });

        JoinRoom.setAlignmentY(0.0F);
        JoinRoom.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        JoinRoom.setPressedIcon(new ImageIcon("D:\\Eclipse\\bg\\joinroom2.jpg"));
        JoinRoom.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JoinRoomMouseClicked(evt);
            }
        });

        UserData.setBorder(new javax.swing.border.LineBorder(java.awt.Color.darkGray, 2, true));
        UserData.setPreferredSize(new java.awt.Dimension(300, 800));

        UserImage.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        UserImage.setPreferredSize(new java.awt.Dimension(150, 200));

        javax.swing.GroupLayout UserImageLayout = new javax.swing.GroupLayout(UserImage);
        UserImage.setLayout(UserImageLayout);
        UserImageLayout.setHorizontalGroup(
            UserImageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        UserImageLayout.setVerticalGroup(
            UserImageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 196, Short.MAX_VALUE)
        );

        Data.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = {  };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        UserList.setViewportView(Data);

        Logout.setAlignmentY(0.0F);
        Logout.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Logout.setPressedIcon(new ImageIcon("D:\\Eclipse\\bg\\logout2.png"));
        Logout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                LogoutMouseClicked(evt);
            }
        });

        Exit.setAlignmentY(0.0F);
        Exit.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Exit.setPressedIcon(new ImageIcon("D:\\Eclipse\\bg\\exit2.png"));
        Exit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ExitMouseClicked(evt);
            }
        });

        EntireCheck.setToolTipText("");
        EntireCheck.setAlignmentY(0.0F);
        EntireCheck.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        EntireCheck.setMaximumSize(new java.awt.Dimension(150, 50));
        EntireCheck.setMinimumSize(new java.awt.Dimension(150, 50));
        EntireCheck.setOpaque(false);
        EntireCheck.setPreferredSize(new java.awt.Dimension(152, 50));
        EntireCheck.setPressedIcon(new ImageIcon("D:\\Eclipse\\bg\\entirecheck2.png"));
        EntireCheck.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                EntireCheckMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout UserDataLayout = new javax.swing.GroupLayout(UserData);
        UserData.setLayout(UserDataLayout);
        UserDataLayout.setHorizontalGroup(
            UserDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(UserDataLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(UserDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, UserDataLayout.createSequentialGroup()
                        .addGroup(UserDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(UserList, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, UserDataLayout.createSequentialGroup()
                                .addComponent(Logout, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Exit, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, UserDataLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(UserDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(UserImage, javax.swing.GroupLayout.DEFAULT_SIZE, 152, Short.MAX_VALUE)
                            .addComponent(EntireCheck, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(84, 84, 84))))
        );
        UserDataLayout.setVerticalGroup(
            UserDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(UserDataLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(UserImage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(EntireCheck, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(UserList, javax.swing.GroupLayout.PREFERRED_SIZE, 379, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(UserDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Logout, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Exit, javax.swing.GroupLayout.DEFAULT_SIZE, 159, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout BackgroundLayout = new javax.swing.GroupLayout(Background);
        Background.setLayout(BackgroundLayout);
        BackgroundLayout.setHorizontalGroup(
            BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BackgroundLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BackgroundLayout.createSequentialGroup()
                        .addComponent(MakeRoom, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(JoinRoom, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(Chat)
                    .addComponent(Room, javax.swing.GroupLayout.DEFAULT_SIZE, 680, Short.MAX_VALUE)
                    .addComponent(ChatWriter))
                .addGap(18, 18, 18)
                .addComponent(UserData, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        BackgroundLayout.setVerticalGroup(
            BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BackgroundLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(UserData, javax.swing.GroupLayout.DEFAULT_SIZE, 830, Short.MAX_VALUE)
                    .addGroup(BackgroundLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(Room, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(JoinRoom, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE)
                            .addComponent(MakeRoom, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Chat, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(2, 2, 2)
                        .addComponent(ChatWriter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Background, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Background, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 850, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    private void ExitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ExitMouseClicked
        // 종료버튼 마우스 좌클릭
        String title = "종료";
        String exit = "종료하시겠습니까?";
        int select = 0;
        select = JOptionPane.showConfirmDialog(null, exit, title, JOptionPane.YES_NO_OPTION,JOptionPane.INFORMATION_MESSAGE);
        if(select == 0){
            System.exit(0);
        } else {
        }
    }//GEN-LAST:event_ExitMouseClicked

    private void LogoutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LogoutMouseClicked
        // 로그아웃 버튼 마우스 좌클릭
        String title = "로그아웃";
        String exit = "로그아웃 하시겠습니까?";
        int select = 0;
        select = JOptionPane.showConfirmDialog(null, exit, title, JOptionPane.YES_NO_OPTION,JOptionPane.INFORMATION_MESSAGE);
        if(select == 0){
            dispose();
            Start S = new Start();
            S.setSize(600, 400);
            Dimension frameSize = S.getSize();
            Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
            S.setLocation((screenSize.width - frameSize.width)/2, (screenSize.height - frameSize.height)/2);
            Container contentPane = S.getContentPane();
            S.setVisible(true);
        } else {
        }
    }//GEN-LAST:event_LogoutMouseClicked

    private void ChatWriterKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ChatWriterKeyPressed
        // 채팅창 입력 후 엔터키 입력

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
			//...동작을 실행한다. 
                        
             String chat = ChatWriter.getText();
           /*  ChatWriter.addActionListener(new ActionListener(){
                  public void actionPerformed(ActionEvent ae){
                     try{
                   // 사용자의 이름과 메시지 내용을 전송한다.
                     writer.println(nameBox.getText()+" : "+ 8 chat);
                            
                    ChatWriter.setText("");  // sendBox의 내용을 지운다.
                   }catch(Exception ie){}
              } 
             });
             pack();
             */
           
             ChatText.append(ID + " : " +chat + "\n");
             ChatWriter.selectAll();
             ChatText.setCaretPosition(ChatText.getDocument().getLength());
             ChatWriter.setText("");
                        
	}
    }//GEN-LAST:event_ChatWriterKeyPressed

    private void MakeRoomMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MakeRoomMouseClicked
        // 방 만들기 버튼 좌클릭
        String room= RoomListSize + "번방";
        RoomListSize++;
        ;
    }//GEN-LAST:event_MakeRoomMouseClicked

    private void EntireCheckMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EntireCheckMouseClicked
        // 전적 확인 버튼 좌클릭
        
    }//GEN-LAST:event_EntireCheckMouseClicked

    private void JoinRoomMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JoinRoomMouseClicked
        // 방 들어가기 버튼 좌클릭
        
    }//GEN-LAST:event_JoinRoomMouseClicked

    private String getID(String ID){
        return ID;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Lobby.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Lobby.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Lobby.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Lobby.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
               // new Lobby().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Background;
    private javax.swing.JScrollPane Chat;
    private javax.swing.JTextArea ChatText;
    private javax.swing.JFormattedTextField ChatWriter;
    private javax.swing.JList<String> Data;
    //전적 확인
    private javax.swing.JButton EntireCheck;
    //종료 버튼
    private javax.swing.JButton Exit;
    // 방 들어가기 버튼
    private javax.swing.JButton JoinRoom;
    // 로그아웃 버튼
    private javax.swing.JButton Logout;
    // 방 만들기 버튼
    private javax.swing.JButton MakeRoom;
    private javax.swing.JScrollPane Room;
    public static javax.swing.JList<String> RoomList;
    private javax.swing.JPanel UserData;
    private javax.swing.JPanel UserImage;
    private javax.swing.JScrollPane UserList;
    // End of variables declaration//GEN-END:variables

    @Override
    public void windowOpened(WindowEvent e) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void windowClosing(WindowEvent e) {
       // TODO Auto-generated method stub
       int confirm = 0;
       String check = "정말로 종료하시겠습니까?";
       confirm = JOptionPane.showConfirmDialog(null, check, "확인 창", JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE);
       if(confirm == 0){
          // 예를 선택한 경우
          setDefaultCloseOperation(EXIT_ON_CLOSE);
       }else{
          // 아니오를 선택한 경우
          setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
       }
    }

    @Override
    public void windowClosed(WindowEvent e) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void windowIconified(WindowEvent e) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void windowDeiconified(WindowEvent e) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void windowActivated(WindowEvent e) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void windowDeactivated(WindowEvent e) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
